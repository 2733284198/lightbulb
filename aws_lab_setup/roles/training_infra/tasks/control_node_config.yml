- block:
    - name: Install EPEL
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present

    - name: Install Base Packages
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - python-pip
        - python-devel
        - sshpass
        - gcc
        - libffi-devel
        - openssl-devel

    - name: Install Ansible via PIP
      pip:
        name: ansible
        state: present
  when: install_ansible

- name: Install packages on control
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - git

- name: Create ssh dir
  file:
    state: directory
    path: /home/{{ username }}/.ssh
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: o-rwx

- name: Set Deployment Key
  copy:
    src: "{{ role_path }}/files/deploy_key"
    dest: /home/{{ username }}/.ssh/id_rsa
    mode: 0400
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Clone lightbulb
  git:
    accept_hostkey: yes
    clone: yes
    dest: /home/{{ username }}/lightbulb
    key_file: /home/{{ username }}/.ssh/id_rsa
    repo: git@github.com:defionscode/lightbulb-1.git
    force: yes

- name: Remove deployment key
  file:
    state: absent
    path: /home/{{ username }}/.ssh/id_rsa

- name: Update Perms for Git Clone
  file:
    state: directory
    recurse: yes
    owner: "{{ username }}"
    group: "{{ username }}"
    path: /home/{{ username }}/lightbulb

- name: Remove things that students don't need
  file:
    state: absent
    path: /home/{{ username }}/lightbulb/{{ item }}
  with_items:
    - aws_lab_setup
    - resources
    - Vagrantfile
    - README.md

- name: Find ansible.cfg files
  find:
    paths: /home/{{ username }}/lightbulb/lessons/
    recurse: yes
    use_regex: yes
    patterns: ansible.cfg
  register: ansible_configs

- name: Replace configs with aws lab based config
  copy:
    src: ansible.cfg
    dest: "{{ item.path }}"
  with_items: "{{ ansible_configs.files }}"

- name: Create lab inventory directory
  file:
    state: directory
    path: /home/{{ username }}/lightbulb/lessons/lab_inventory

- name: Setup student inventory in proper spot
  copy:
    src: ./{{ username }}-instances.txt
    dest: /home/{{ username }}/lightbulb/lessons/lab_inventory/hosts
  when: "username in inventory_hostname"

- name: Update Perms from home dir down
  file:
    state: directory
    recurse: yes
    owner: "{{ username }}"
    group: "{{ username }}"
    path: /home/{{ username }}
